syntax = "proto3";
// protoc --go_out=plugins=grpc:. *.proto

package redisgrpc;
option go_package = "/redisgrpc";

// The request message containing the user info.
message WriteRequest {
  string Login      = 1;
	string Fname      = 2;
	string Lname      = 3;
	string Pass       = 4;
	string Role       = 5;
  string LastActive = 6;
}

// The request message for session creation
message AddSessionRequest {
  string UserName = 1;
  string SessionId = 2;
}

// The response message for session creation
message AddSessionResponse {
  int32 status = 1;
  string desription = 2;
}

// The request message for session acquiring
message GetSessionRequest {
  string UserName = 1;
  string SessionId = 2;
}

// The response message for session acquiring
message GetSessionResponse {
  int32 status = 1;
  string desription = 2;
  string UserName = 3;
}

// The writer session service definition.
service WriterSession {
  rpc   AddSession(AddSessionRequest) returns (AddSessionResponse) {}
}

// The getter session service definition.
service GetterSession {
  rpc   GetSession(GetSessionRequest) returns (GetSessionResponse) {}
}

// The message containing the user info.
message UserInfo {
  string Login      = 1;
	string Fname      = 2;
	string Lname      = 3;
	string Pass       = 4;
	string Role       = 5;
  string LastActive = 6;
}

// The response message
message WriteResponse {
  int32 status = 1;
  string desription = 2;
}

// The writer service definition.
service Writer {
  rpc   Write(WriteRequest) returns (WriteResponse) {}
}


// Request to acquire last user info
message ReadRequest {
  string Login = 1;
}

message ReadResponse {
  UserInfo result = 1;
  int32 status = 2;
  string desription = 3;
}

// The writer service definition.
service Reader {
  rpc   Read(ReadRequest) returns (ReadResponse) {}
}